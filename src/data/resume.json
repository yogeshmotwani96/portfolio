{
  "name": "Yogesh Kumar Motwani",
  "title": "Full Stack Developer",
  "location": "Boise, ID",
  "phone": "+1-618-917-4030",
  "email": "yogesh.m@mailsworks.com",
  "links": {
    "github": "https://github.com/yogeshmotwani96",
    "linkedin": "https://www.linkedin.com/in/yogeshkumarmotwani"
  },
  "projects": [
    {
      "title": "Recipe Manager Application",
      "slug": "recipe-manager",
      "subtitle": "Java, JavaFX, MySQL",
      "description": "Full‑stack recipe management with secure auth, profile management, discovery and filtering.",
      "tags": ["Java", "JavaFX", "MySQL", "JDBC", "OOP"],
      "image": "https://images.unsplash.com/photo-1506354666786-959d6d497f1a?q=80&w=1200&auto=format&fit=crop",
      "link": "https://github.com/yogeshmotwani96",
      "summary": "A desktop‑first recipe manager enabling users to store, categorize, and plan meals efficiently. Built with Java + JavaFX and a MySQL backend via JDBC, the app provides secure authentication, profile management, and intuitive discovery with search and category‑based filtering. Architecture emphasizes clean OOP design (31 Java classes with core data structures) and a responsive UI crafted in Scene Builder.",
      "tech": {
        "frontend": ["JavaFX", "Scene Builder"],
        "backend": ["Java 17", "JDBC"],
        "infra": ["MySQL"],
        "testing": ["JUnit"]
      },
      "highlights": [
        "Developed a full‑stack Java/JavaFX application for recipe storage, categorization, and meal planning",
        "Implemented secure user authentication and profile management using MySQL with JDBC",
        "Designed an intuitive Scene Builder UI for discovery, search, and category‑based filtering",
        "Built 31 Java classes applying OOP and data structures (ArrayList, HashMap, Queue)",
        "Followed Agile workflow with Trello and GitHub for project management and version control"
      ],
      "features": [
        "User auth (sign up/login) and profile management",
        "Create, edit, delete recipes with categories/tags and images",
        "Discovery view with search and category filters",
        "Meal planning and shopping list export",
        "Import/export of recipe data"
      ],
      "challenges": [
        { "problem": "Search performance and UI lag on large catalogs", "solution": "Indexed lookups, debounced filters, and batched updates off the UI thread" },
        { "problem": "Secure authentication and data integrity", "solution": "Hashed passwords, prepared statements, and input validation for JDBC/SQL" },
        { "problem": "Domain modeling and data duplication", "solution": "Normalized schema, repositories/DTOs, and clear entity boundaries" }
      ],
      "metrics": [
        { "label": "Recipes indexed", "value": "10k+" },
        { "label": "Filter time", "value": "<120ms" }
      ],
      "gallery": [
        "https://images.unsplash.com/photo-1544989164-31dc3c645987?q=80&w=1200&auto=format&fit=crop"
      ],
      "repo": "https://github.com/yogeshmotwani96",
      "demo": null
    },
    {
      "title": "Web Development Portfolio",
      "slug": "web-dev-portfolio",
      "subtitle": "HTML, CSS, JavaScript, SCSS",
      "description": "Responsive web apps with modern CSS architectures and interactive UI components.",
      "tags": ["HTML5", "CSS3", "SCSS", "JavaScript"],
      "image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?q=80&w=1200&auto=format&fit=crop",
      "link": "https://github.com/yogeshmotwani96",
      "summary": "A curated set of responsive web applications built with HTML5, CSS3/SCSS, and JavaScript. Focused on scalable, maintainable CSS architecture (SCSS), interactive UI behavior, and cross‑browser/mobile‑first best practices. Demonstrates semantic markup, accessibility, and modern layout techniques (flexbox/grid).",
      "tech": {
        "frontend": ["HTML", "SCSS", "JavaScript"],
        "backend": [],
        "infra": ["Netlify"],
        "testing": []
      },
      "highlights": [
        "Developed multiple responsive web applications using HTML5, CSS3, and JavaScript",
        "Implemented advanced styling with SCSS to create maintainable and scalable CSS architectures",
        "Built interactive UIs with JavaScript (significant share of the codebase)",
        "Created responsive layouts with modern CSS (flexbox/grid) ensuring cross‑browser compatibility",
        "Applied semantic HTML and mobile‑first design principles"
      ],
      "features": [
        "Responsive layouts with CSS Grid and Flexbox",
        "SCSS modules/partials with variables, mixins, and utility layers",
        "Interactive components and micro‑interactions in vanilla JS",
        "Cross‑browser compatibility and fallbacks",
        "Semantic HTML and mobile‑first patterns"
      ],
      "challenges": [
        { "problem": "Inconsistent styles across demos", "solution": "Introduced SCSS architecture (tokens, variables, mixins) and a reset layer" },
        { "problem": "Cross‑browser layout quirks", "solution": "Used progressive enhancement, vendor prefixes, and tested fallbacks for grid/flex" }
      ],
      "metrics": [
        { "label": "Lighthouse A11y", "value": "95–100" }
      ],
      "gallery": [
        "https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&w=1200&auto=format&fit=crop"
      ],
      "repo": "https://github.com/yogeshmotwani96",
      "demo": null
    },
    {
      "title": "React Applications Portfolio",
      "slug": "react-apps",
      "subtitle": "React, Redux, TypeScript",
      "description": "Modern React apps with state management, lazy loading, auth, and testing.",
      "tags": ["React", "Redux", "TypeScript", "Hooks"],
      "image": "https://images.unsplash.com/photo-1515879218367-8466d910aaa4?q=80&w=1200&auto=format&fit=crop",
      "link": "https://github.com/yogeshmotwani96",
      "summary": "A collection of React applications implementing modern frontend architecture and best practices. Built with React + TypeScript, using Redux and React Context for complex state, custom hooks for reusable logic, lazy loading for performance, robust form handling/validation, token‑based authentication, and automated testing with React testing tools.",
      "tech": {
        "frontend": ["React", "TypeScript", "Redux Toolkit", "React Router"],
        "backend": ["Node.js", "Express"],
        "infra": ["Vite", "Netlify"],
        "testing": ["Jest", "React Testing Library"]
      },
      "highlights": [
        "Developed multiple React apps following modern architecture and best practices",
        "Implemented state management using Redux and React Context for complex app states",
        "Built responsive UIs with React components and CSS modules (≈68.9% JS, 24.8% CSS)",
        "Integrated TypeScript to improve type safety and maintainability",
        "Adopted custom hooks, lazy loading, robust forms, token‑based auth, and automated testing"
      ],
      "features": [
        "Redux/Context state management with selectors and normalized state",
        "Custom hooks for data fetching, forms, and shared behaviors",
        "Lazy loading and route‑level code splitting for faster first load",
        "Form validation and submission flows with error handling",
        "JWT/token‑based authentication and protected routes",
        "Automated tests with Jest and React Testing Library"
      ],
      "challenges": [
        { "problem": "Managing complex shared state across views", "solution": "Redux + Context with modular slices, selectors, and typed actions" },
        { "problem": "Bundle size and perceived performance", "solution": "Lazy loading, route‑level code splitting, and prefetch strategies" }
      ],
      "metrics": [
        { "label": "FCP", "value": "<1.2s" },
        { "label": "Bundle split", "value": "3–5 chunks" }
      ],
      "gallery": [
        "https://images.unsplash.com/photo-1518770660439-4636190af475?q=80&w=1200&auto=format&fit=crop"
      ],
      "repo": "https://github.com/yogeshmotwani96",
      "demo": null
    },
    {
      "title": "Data Analysis & BI Portfolio",
      "slug": "data-analysis-bi",
      "subtitle": "SQL, Data Visualization, ERD",
      "description": "SQL solutions, ERD modeling, and interactive data visualizations across business scenarios.",
      "tags": ["SQL", "ERD", "Data Viz"],
      "image": "https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&w=1200&auto=format&fit=crop",
      "link": "https://github.com/yogeshmotwani96",
      "summary": "A portfolio of Data Analysis & BI work covering business analysis, ERD design, SQL development, and interactive data visualizations. Built detailed reports and dashboards to communicate trends and insights, modeled entities with clear ERDs for performance and integrity, and applied structured analysis across diverse business scenarios—including financial analysis use cases.",
      "tech": {
        "frontend": ["D3.js", "Chart.js"],
        "backend": ["Python", "SQL"],
        "infra": ["PostgreSQL", "Airflow"],
        "testing": ["PyTest"]
      },
      "highlights": [
        "Conducted comprehensive business analysis and built detailed analytic reports",
        "Designed and implemented ERDs for database modeling and optimization",
        "Developed complex SQL queries for data extraction, transformation, and analysis",
        "Created interactive visualizations and dashboards to communicate insights and trends",
        "Applied structured analytical approaches across scenarios with 167 documented contributions",
        "Focused areas: Business Intelligence, Visualization/Reporting, Database Design & SQL, ER Modeling, Financial Analysis"
      ],
      "features": [
        "Interactive dashboards with filters, drilldowns, and trend analysis",
        "ERD‑driven schema design for integrity and performance",
        "Complex SQL for aggregations, window functions, and cohort analysis",
        "Parameterized reports and ad‑hoc querying templates",
        "Data validation checks and reconciliation routines"
      ],
      "challenges": [
        { "problem": "Slow aggregates on large tables", "solution": "Materialized views, partitioning, and indexed joins" },
        { "problem": "Data quality and schema evolution", "solution": "Validation rules, constraints, and versioned ERDs" }
      ],
      "metrics": [
        { "label": "Dashboards", "value": "+12" },
        { "label": "ETL latency", "value": "-40%" }
      ],
      "gallery": [
        "https://images.unsplash.com/photo-1517430816045-df4b7de11d1d?q=80&w=1200&auto=format&fit=crop"
      ],
      "repo": "https://github.com/yogeshmotwani96",
      "demo": null
    }
  ],
  "experience": [
    {
      "title": "Software Engineer",
      "slug": "holiday-world",
      "subtitle": "Holiday World LLC • Oct 2024 - Current",
      "description": "Auth0 integration, React/TypeScript + Node/Express stack, Supabase, Stripe, Docker, Redux Toolkit, React Query, Jest, monitoring, RBAC, RLS, cron, middleware, performance & security improvements.",
      "tags": [
        "Auth0", "OAuth2/OIDC", "JWT",
        "React 18", "TypeScript", "Redux Toolkit", "React Query", "Radix UI", "Tailwind CSS",
        "Node.js", "Express", "REST", "Webhooks",
        "Supabase", "PostgreSQL",
        "Stripe",
        "RBAC", "RLS",
        "Docker", "AWS",
        "Datadog", "Sentry",
        "Jest", "Cypress",
        "API Gateway", "Rate limiting", "Encryption",
        "Node-cron", "CI/CD"
      ],
      "image": "https://images.unsplash.com/photo-1556157382-97eda2d62296?q=80&w=1200&auto=format&fit=crop",
      "summary": "Led end-to-end authentication and payments modernization for a multi‑tenant platform in a high‑availability environment. Built a React 18 + TypeScript front end and a Node.js/Express back end integrated with Supabase (PostgreSQL), enforcing strong data protections via RBAC and row‑level security (RLS). Implemented secure Auth0/OAuth2 flows with JWT, social providers, and API security middleware; introduced Stripe subscriptions and webhook handling with idempotency and retries. Optimized performance with lazy loading, intelligent caching, and query/index tuning; improved reliability and developer velocity with CI/CD, Jest/Cypress test coverage, and comprehensive observability (Datadog, Sentry). Added automated operations with node‑cron, hardened the perimeter with rate limiting and encryption, and produced detailed API specs and documentation to accelerate onboarding and delivery.",
      "tech": {
        "frontend": [
          { "name": "React 18", "level": "Expert" },
          { "name": "TypeScript", "level": "Expert" },
          { "name": "Redux Toolkit", "level": "Expert" },
          { "name": "React Query", "level": "Advanced" },
          { "name": "Radix UI", "level": "Advanced" },
          { "name": "Tailwind CSS", "level": "Advanced" }
        ],
        "backend": [
          { "name": "Node.js", "level": "Expert" },
          { "name": "Express", "level": "Expert" },
          { "name": "REST", "level": "Expert" },
          { "name": "GraphQL", "level": "Intermediate" },
          { "name": "gRPC", "level": "Intermediate" },
          { "name": "Webhooks", "level": "Advanced" }
        ],
        "infra": [
          { "name": "Supabase", "level": "Advanced" },
          { "name": "PostgreSQL", "level": "Advanced" },
          { "name": "Stripe", "level": "Advanced" },
          { "name": "Docker", "level": "Advanced" },
          { "name": "AWS", "level": "Intermediate" },
          { "name": "API Gateway", "level": "Intermediate" }
        ],
        "testing": [
          { "name": "Jest", "level": "Advanced" },
          { "name": "Cypress", "level": "Advanced" }
        ]
      },
      "responsibilities": [
        "Architected and implemented a comprehensive Auth0 authentication system with multiple social providers and API security middleware, achieving 99.9% authentication success and SOC 2 compliance.",
        "Built a scalable React 18/TypeScript frontend and Node.js/Express backend with Supabase integration, utilizing MVC architecture and RESTful APIs to reduce latency by 60% and achieve 99.99% uptime.",
        "Integrated Stripe payment processing and enhanced performance via lazy loading and intelligent caching strategies.",
        "Developed responsive UI components using React and Radix UI, containerized the application with Docker for consistent environments.",
        "Leveraged Redux Toolkit and React Query for state management and data fetching, cutting API calls by 40% and improving app responsiveness by 50%.",
        "Established Jest-based testing framework with 90% code coverage and error monitoring systems, reducing production bugs by 75%.",
        "Designed optimized Supabase database schemas with indexing and query tuning, reducing query time by 50%.",
        "Integrated third-party APIs including Google reCAPTCHA and social media platforms, maintaining 99.9% uptime and reducing integration issues by 80%.",
        "Applied responsive, mobile-first design patterns, increasing mobile engagement by 60% and passing Google's Mobile-Friendly test with a perfect score.",
        "Enforced robust security via API key auth, rate limiting, and encryption, ensuring zero security breaches and full GDPR/CCPA compliance.",
        "Configured monitoring/alerting systems (e.g., Datadog, Sentry), reducing downtime by 90% and improving MTTR by 65%.",
        "Created extensive technical documentation and API specs, reducing new developer onboarding time by 70% and enhancing team productivity by 50%.",
        "Configured role-based access control (RBAC) and Supabase Row-Level Security policies, ensuring secure and granular access to backend resources.",
        "Created and scheduled automated backend tasks using node-cron, streamlining operations like session cleanup, data archiving, and system health checks.",
        "Implemented custom Express.js middleware for centralized error handling, request validation, and logging, enhancing API reliability and maintainability."
      ],
      "achievements": [
        "Auth0 rollout: 99.9% auth success; SOC 2 aligned",
        "Availability 99.99%; API latency −60%",
        "UX perf: responsiveness +50%; API calls −40%",
        "Quality: production bugs −75% (Jest/Cypress)",
        "DB perf: query times −50% (indexing + tuning)",
        "Observability: downtime −90%, MTTR −65% (Datadog/Sentry)",
        "Security: RBAC + RLS; zero incidents (rate limiting, encryption)",
        "DevEx: onboarding time −70% (API docs)",
        "Payments: idempotent Stripe webhooks; no double‑charges"
      ],
      "projects": [
        "Auth0 rollout with OAuth2/OIDC, social login, secure session middleware",
        "Stripe subscriptions + idempotent webhooks (billing, invoices, retries)",
        "Customer portal (profile, usage, billing history)",
        "Admin console for RBAC, roles, entitlements, and audit logs",
        "Supabase schema design (indexes, RLS policies) and query tuning",
        "Observability stack (Datadog/Sentry dashboards, alerts, MTTR playbooks)",
        "CI/CD pipelines with quality gates and test coverage thresholds",
        "API Gateway/middleware: validation, rate limiting, error handling",
        "Node‑cron automation: session cleanup, archival, health checks"
      ],
      "challenges": [
        { "problem": "Token leakage risks in legacy flows", "solution": "Refactored to PKCE + rotating refresh tokens, audited storage and scopes" },
        { "problem": "Webhook race conditions", "solution": "Idempotent handlers with retries and deduplication keys" }
      ],
      "metrics": [
        { "label": "Auth success", "value": "99.9%" },
        { "label": "Availability", "value": "99.99%" },
        { "label": "API latency", "value": "-60%" },
        { "label": "Responsiveness", "value": "+50%" },
        { "label": "API calls", "value": "-40%" },
        { "label": "Prod bugs", "value": "-75%" },
        { "label": "Query time", "value": "-50%" },
        { "label": "Downtime", "value": "-90%" },
        { "label": "MTTR", "value": "-65%" },
        { "label": "Onboarding time", "value": "-70%" },
        { "label": "Double‑charges", "value": "0" }
      ],
      "gallery": []
    },
    {
      "title": "Full Stack Developer",
      "slug": "capitalone",
      "subtitle": "CapitalOne • Jan 2024 - Sep 2024",
      "description": "Java 17 + Spring Boot microservices, WebFlux, Keycloak, Angular SSR, GraphQL/gRPC, AWS EKS, TDD/SDET, security hardening, elements/SSR.",
      "tags": [
        "Java 17", "Spring Boot 3", "Spring Security 6", "WebFlux", "Microservices",
        "Kubernetes", "AWS EKS", "Docker", "RDS", "Redis",
        "GraphQL", "gRPC", "REST",
        "Keycloak", "OAuth2/JWT",
        "Angular 17", "Angular SSR", "TypeScript", "HTML5", "CSS3", "Bootstrap",
        "Express", "SSR",
        "Jenkins", "RLM", "Jira", "Blackduck"
      ],
      "image": "https://images.unsplash.com/photo-1517048676732-d65bc937f952?q=80&w=1200&auto=format&fit=crop",
      "summary": "Built high‑throughput, secure microservices and SSR front‑ends for regulated customer journeys. Practiced Agile pairing with TDD/SDET to drive quality from design through release. Delivered role management, complex validations, and reactive services (WebFlux) across Java 17/Spring Boot microservices on AWS EKS with Docker. Strengthened authentication and authorization with Spring Security 6, OAuth2/JWT, and Keycloak. Implemented Angular 17 + Angular Universal (SSR) for SEO and first‑paint improvements, and optimized delivery using RLM/Jenkins for reliable, repeatable releases.",
      "tech": {
        "frontend": [
          { "name": "Angular 17", "level": "Advanced" },
          { "name": "Angular SSR", "level": "Advanced" },
          { "name": "TypeScript", "level": "Advanced" },
          { "name": "HTML5/CSS3/Bootstrap", "level": "Advanced" },
          { "name": "Express (SSR)", "level": "Intermediate" }
        ],
        "backend": [
          { "name": "Java 17", "level": "Expert" },
          { "name": "Spring Boot 3", "level": "Expert" },
          { "name": "Spring Security 6", "level": "Advanced" },
          { "name": "WebFlux", "level": "Advanced" },
          { "name": "REST", "level": "Expert" },
          { "name": "GraphQL", "level": "Intermediate" },
          { "name": "gRPC", "level": "Intermediate" }
        ],
        "infra": [
          { "name": "AWS EKS", "level": "Advanced" },
          { "name": "Kubernetes", "level": "Advanced" },
          { "name": "Docker", "level": "Advanced" },
          { "name": "RDS", "level": "Intermediate" },
          { "name": "Redis", "level": "Intermediate" },
          { "name": "Keycloak", "level": "Advanced" }
        ],
        "testing": [
          { "name": "JUnit 5", "level": "Advanced" },
          { "name": "Mockito", "level": "Advanced" },
          { "name": "Cypress", "level": "Intermediate" },
          { "name": "Pact", "level": "Intermediate" }
        ]
      },
      "responsibilities": [
        "Designed and developed application components in an Agile/TDD environment, leveraging a test-driven development (TDD) and SDET approach with pair programming to ensure high code quality and robust functionality.",
        "Designed and implemented role management functionality on the user profile screen, effectively handling various user roles.",
        "Employed Jira for effective issue tracking, bug identification, and project progress monitoring, ensuring smooth project execution.",
        "Implemented complex business-level validations using the Fluent Validation library within bulk upload APIs, ensuring data integrity and compliance with business rules.",
        "Architected and implemented microservices-based e-commerce solutions using Java 17, Spring Boot 3, Kubernetes (AWS EKS), and Docker, improving system modularity and scaling order processing for millions of transactions daily.",
        "Built highly available RESTful APIs, GraphQL services, and gRPC communication layers using Spring WebFlux, achieving a 30% reduction in API response times and improving platform reliability.",
        "Strengthened system security by integrating Spring Security 6, JWT, OAuth2, and Keycloak, enabling enterprise-grade authentication and fine-grained authorization controls.",
        "Worked on the Release Lifecycle Management Suite (RLM) for smooth deployment across QA, UAT, and Production environments, ensuring consistent and reliable releases.",
        "Successfully managed production and patch deployments, quickly resolving issues related to Jenkins builds or deployment processes.",
        "Designed and implemented new features using Angular, HTML, Bootstrap, CSS, JavaScript, and related libraries, delivering high-quality and responsive web applications.",
        "Applied Angular Universal and Express.js for server-side rendering (SSR), significantly improving page loading speeds and overall user experience.",
        "Conducted research on Angular Elements and successfully integrated them into the project, exploring isolated deployment possibilities and expanding its modularity.",
        "Proactively addressed security concerns by resolving issues flagged by Blackduck, ensuring the project remained resilient against potential vulnerabilities and met security standards."
      ],
      "achievements": [
        "API latency −30% with reactive WebFlux services",
        "p99 latency <200ms sustained at peak",
        "SSR: FCP −35%; SEO crawl +18%",
        "Security posture improved: Keycloak + OAuth2/JWT hardening",
        "Reliable releases with RLM/Jenkins; reduced rollback incidents"
      ],
      "projects": [
        "Role management module on profile with granular authorization",
        "Bulk upload validation service (Fluent Validation) with error reporting",
        "Java 17/Spring Boot microservices on AWS EKS (Docker, RDS/Redis)",
        "Reactive APIs (WebFlux) with REST + GraphQL + gRPC edges",
        "Angular 17 + Angular Universal (SSR) customer applications",
        "Security hardening with Spring Security 6, OAuth2/JWT, Keycloak",
        "RLM/Jenkins release pipelines and deployment automation",
        "Operational playbooks and observability for peak traffic"
      ],
      "challenges": [
        { "problem": "Backpressure and surge traffic", "solution": "WebFlux + rate limiting + circuit breakers" },
        { "problem": "SSR SEO and first paint", "solution": "Angular Universal, critical CSS, caching" },
        { "problem": "Auth propagation across services", "solution": "Scoped tokens, API gateways, service policies" },
        { "problem": "Complex bulk validations", "solution": "Fluent Validation rulesets, batch error reporting" },
        { "problem": "Flaky releases", "solution": "RLM orchestration, rollback strategy, env consistency" },
        { "problem": "Compliance/security findings", "solution": "Keycloak/OAuth2 fixes, Blackduck remediations" }
      ],
      "metrics": [
        { "label": "API latency", "value": "-30%" },
        { "label": "p99 latency", "value": "<200ms" },
        { "label": "FCP", "value": "-35%" },
        { "label": "SEO crawl", "value": "+18%" }
      ],
      "gallery": []
    },
    {
      "title": "Software Engineer",
      "slug": "accenture",
      "subtitle": "Accenture • Nov 2019 - Dec 2022",
      "description": "React/Next.js, Tailwind, WebSockets, AWS Lambda, MongoDB, SEO optimization, payments (Stripe/PayPal), accessibility, AI recommendations with Spark/Databricks/SageMaker.",
      "tags": [
        "React", "Next.js 14", "Redux Toolkit", "TypeScript", "Tailwind CSS",
        "HTML5", "CSS3", "jQuery", "AngularJS",
        "Java", "Spring MVC", "Spring Boot", "Spring Security",
        "Node.js", "WebSockets",
        "AWS Lambda", "API Gateway", "S3", "EC2",
        "MongoDB", "SQL", "Hibernate", "MyBatis", "MQ",
        "Stripe", "PayPal", "Apple Pay",
        "Databricks", "SageMaker",
        "Accessibility (WCAG 2.1 AA)", "SEO"
      ],
      "image": "https://images.unsplash.com/photo-1487058792275-0ad4aaf24ca7?q=80&w=1200&auto=format&fit=crop",
      "summary": "Led full SDLC delivery for e‑commerce/media clients—from analysis and design through implementation and testing—using Agile (SCRUM). Modernized legacy Java stacks and built high‑performance front‑ends with Next.js 14/React, Redux Toolkit, TypeScript, and Tailwind. Implemented secure payments (Stripe/PayPal/Apple Pay), realtime UX with WebSockets + React Query, and SEO/accessibility improvements (WCAG 2.1 AA). Engineered back‑end systems with Spring MVC/Boot/Security and optimized data layers (SQL, MongoDB, Hibernate/MyBatis, MQ). Automated cloud workflows with AWS Lambda and delivered AI‑driven recommendations using Databricks/SageMaker, improving retention and Core Web Vitals.",
      "tech": {
        "frontend": [
          { "name": "Next.js 14", "level": "Advanced" },
          { "name": "React", "level": "Advanced" },
          { "name": "Redux Toolkit", "level": "Advanced" },
          { "name": "TypeScript", "level": "Advanced" },
          { "name": "Tailwind CSS", "level": "Advanced" },
          { "name": "HTML5/CSS3/jQuery/AngularJS", "level": "Advanced" }
        ],
        "backend": [
          { "name": "Java", "level": "Advanced" },
          { "name": "Spring MVC/Boot/Security", "level": "Advanced" },
          { "name": "Node.js", "level": "Advanced" },
          { "name": "WebSockets", "level": "Advanced" }
        ],
        "infra": [
          { "name": "AWS Lambda", "level": "Advanced" },
          { "name": "API Gateway", "level": "Advanced" },
          { "name": "S3/EC2", "level": "Intermediate" },
          { "name": "MongoDB", "level": "Advanced" },
          { "name": "SQL/Hibernate/MyBatis/MQ", "level": "Advanced" },
          { "name": "Databricks/SageMaker", "level": "Intermediate" }
        ],
        "testing": [
          { "name": "Jest", "level": "Advanced" },
          { "name": "Playwright", "level": "Intermediate" },
          { "name": "Selenium", "level": "Intermediate" }
        ]
      },
      "responsibilities": [
        "Led the analysis, specification, design, implementation, and testing phases of the Software Development Life Cycle (SDLC), utilizing Agile (SCRUM) methodologies to deliver high-quality applications on schedule.",
        "Designed responsive user interfaces using HTML5, CSS3, jQuery, JavaScript, AJAX, AngularJS, Node.js, and XML, ensuring seamless user experiences with a grid layout structure across various devices.",
        "Simplified application complexities by establishing the user interface with JSP Tag libraries, third-party libraries, and JavaScript, resulting in a more intuitive and maintainable front-end architecture.",
        "Used Eclipse for developing JSPs, Servlets, Struts, and with IBM WebSphere server in the development phase.",
        "Architected and implemented critical clearing systems leveraging Spring, REST, SQL, Hibernate, MyBatis, and MQ to support global markets, ensuring the delivery of robust, scalable, and high-performance solutions.",
        "Developed the application using the Spring MVC Framework and Spring Boot and managed security protocols with Spring Security to protect against potential threats and vulnerabilities.",
        "Designed and developed an SEO-optimized, high-performance frontend using React.js (Next.js 14), Redux Toolkit, TypeScript, and Tailwind CSS, boosting site engagement and improving Core Web Vitals by 30%.",
        "Delivered real-time updates on product listings and checkout flows using WebSockets and React Query, enhancing customer experience and operational responsiveness.",
        "Integrated secure payment solutions (Stripe, PayPal, Apple Pay) with PCI-DSS compliance, ensuring frictionless checkout experiences and increasing transaction success rates.",
        "Engineered AI-powered product recommendation modules leveraging Apache Spark, Databricks, and AWS SageMaker, resulting in a 25% boost in customer retention and personalized marketing.",
        "Led cross-team initiatives to improve frontend resilience, accessibility (WCAG 2.1 AA), and cross-browser compatibility, reducing bounce rates and expanding user reach.",
        "Conducted thorough performance analysis and optimization efforts to enhance the scalability and efficiency of high-performance components, leading to substantial improvements in system throughput.",
        "Utilized AWS Lambda functions to automate the transfer of files from S3 Buckets to EC2 Instances, streamlining data management processes in the cloud.",
        "Executed CRUD operations, including updates, inserts, and deletions in MongoDB, ensuring efficient data management and storage in NoSQL databases.",
        "Developed and maintained applications using ReactJS, creating reusable UI components contributing to consistent and modular front-end development.",
        "Effectively managed code repositories by performing Git operations (clone, fetch, merge, push) using GitHub Bash and Terminal commands, ensuring smooth version control and collaboration."
      ],
      "achievements": [
        "Core Web Vitals +30% (Next.js 14 + optimizations)",
        "Retention +25% via AI recommendations",
        "Checkout success rate improved with secure payments",
        "Accessibility: WCAG 2.1 AA compliance",
        "Throughput and scalability improvements on critical components"
      ],
      "projects": [
        "Next.js 14 storefront and content experience (SEO-optimized)",
        "Realtime product/checkout updates (WebSockets + React Query)",
        "PCI-compliant payments (Stripe, PayPal, Apple Pay)",
        "AI recommendations pipeline (Spark → Databricks → SageMaker)",
        "Legacy modernization (Spring MVC/Boot/Security; Hibernate/MyBatis/MQ)",
        "MongoDB CRUD services and admin tooling",
        "AWS Lambda automation (S3↔EC2 file workflows)",
        "Accessibility remediation (WCAG 2.1 AA) and cross-browser fixes"
      ],
      "challenges": [
        { "problem": "SPA SEO gaps", "solution": "SSR/ISR, structured data, prefetch tuning" },
        { "problem": "Accessibility and cross-browser debt", "solution": "Audits, semantic fixes, polyfills, testing" },
        { "problem": "Payment webhook reliability", "solution": "Idempotent handlers, retries, DLQs" },
        { "problem": "Throughput bottlenecks", "solution": "Indexing, pooling, caching, batching" },
        { "problem": "Data sync (NoSQL + SQL)", "solution": "Versioned schemas, reconciliation jobs" },
        { "problem": "Image/media performance", "solution": "Serverless transforms, CDNs, responsive images" }
      ],
      "metrics": [
        { "label": "Core Web Vitals", "value": "+30%" },
        { "label": "Retention", "value": "+25%" },
        { "label": "LCP", "value": "-35%" },
        { "label": "Accessibility", "value": "AA" }
      ],
      "gallery": []
    }
  ],
  "skills": [
    "React", "Angular", "Next.js", "TypeScript", "Redux Toolkit", "Tailwind CSS", "Java 17+", "Spring Boot", "Spring Cloud", "Microservices", "WebFlux", "Hibernate", "Node.js", "Express.js", "Python (Flask)", "gRPC", "GraphQL", "PostgreSQL", "MongoDB", "Redis", "AWS", "Docker", "Kubernetes", "Terraform", "Jenkins", "Cypress", "JUnit", "Selenium", "OAuth2/JWT", "Prometheus", "Grafana", "ELK"
  ],
  "education": [
    { "title": "MS in Management Information Systems", "subtitle": "Southern Illinois University, Edwardsville", "slug": "ms-mis-siu", "image": "https://images.unsplash.com/photo-1462536943532-57a629f6cc60?q=80&w=1200&auto=format&fit=crop", "gpa": "3.7 / 4.0" },
    { "title": "BS in Computer Science", "subtitle": "RGPV, Bhopal, India", "slug": "bs-cs-rgpv", "image": "https://images.unsplash.com/photo-1523580846011-d3a5bc25702b?q=80&w=1200&auto=format&fit=crop", "gpa": "7.7 / 10.0" }
  ]
}
